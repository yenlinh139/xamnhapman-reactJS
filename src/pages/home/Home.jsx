import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import { Helmet } from "react-helmet-async";
import { useSelector, useDispatch } from "react-redux";
import Header from "@pages/themes/headers/Header";
import Footer from "@pages/themes/footer/Footer";
import Banner from "@/pages/home/Banner";
import bannerAbout from "@assets/bannerAbout.jpg";
import { getAllFeedbackData, loadMoreFeedback, feedbackActions } from "@/stores/actions/feedbackActions";

const userRoles = [
    {
        title: "Ng∆∞·ªùi d√πng ch∆∞a ƒëƒÉng nh·∫≠p",
        icon: "üëÅÔ∏è",
        color: "gray",
        features: [
            "Xem th√¥ng tin t·ªïng quan h·ªá th·ªëng",
            "Xem v·ªã tr√≠ c√°c tr·∫°m quan tr·∫Øc",
            "Truy c·∫≠p th√¥ng tin c∆° b·∫£n",
        ],
    },
    {
        title: "Ng∆∞·ªùi d√πng ƒë√£ ƒëƒÉng nh·∫≠p",
        icon: "üë§",
        color: "blue",
        features: [
            "T∆∞∆°ng t√°c ƒë·∫ßy ƒë·ªß v·ªõi b·∫£n ƒë·ªì WebGIS",
            "Xem chi ti·∫øt d·ªØ li·ªáu tr·∫°m kh√≠ t∆∞·ª£ng v√† x√¢m nh·∫≠p m·∫∑n",
            "Ph√¢n t√≠ch d·ªØ li·ªáu: l·ªçc theo ng√†y, xu·∫•t bi·ªÉu ƒë·ªì",
            "T√¨m ki·∫øm tr·∫°m theo t√™n v√† ƒë∆°n v·ªã h√†nh ch√≠nh",
            "Zoom ƒë·∫øn khu v·ª±c/tr·∫°m quan t√¢m",
            "Xem th√¥ng tin n·ªÅn: ranh gi·ªõi, th·ªßy vƒÉn, giao th√¥ng",
            "G·ª≠i ƒë√°nh gi√° v√† ch·ªânh s·ª≠a th√¥ng tin c√° nh√¢n",
        ],
    },
    {
        title: "Qu·∫£n tr·ªã vi√™n",
        icon: "‚öôÔ∏è",
        color: "red",
        features: [
            "T·∫•t c·∫£ ch·ª©c nƒÉng c·ªßa ng∆∞·ªùi d√πng",
            "Qu·∫£n l√Ω th√¥ng tin ng∆∞·ªùi d√πng h·ªá th·ªëng",
            "Qu·∫£n l√Ω d·ªØ li·ªáu m·∫∑n v√† c·∫≠p nh·∫≠t",
            "C√°c ch·ª©c nƒÉng m·ªü r·ªông qu·∫£n tr·ªã h·ªá th·ªëng",
        ],
    },
];

const Home = () => {
    const dispatch = useDispatch();
    const {
        loading: feedbackLoading,
        overview,
        timeStats,
        recentFeedback,
        ratingStats,
        showAllFeedback,
        error: feedbackError,
    } = useSelector((state) => state.feedback || {});

    // State for feedback display
    const [displayedFeedbackCount, setDisplayedFeedbackCount] = useState(3);
    const [isLoadingMore, setIsLoadingMore] = useState(false);

    // Fetch feedback data on component mount
    useEffect(() => {
        dispatch(getAllFeedbackData());
    }, [dispatch]);

    // Handle load more feedback
    const handleLoadMore = async () => {
        setIsLoadingMore(true);
        try {
            // Load th√™m 10 feedback n·ªØa
            await dispatch(loadMoreFeedback(recentFeedback.length, 10));
            setDisplayedFeedbackCount((prev) => prev + 10);
        } catch (error) {
            console.error("Error loading more feedback:", error);
        } finally {
            setIsLoadingMore(false);
        }
    };

    // Handle show all feedback
    const handleShowAll = async () => {
        if (!showAllFeedback) {
            setIsLoadingMore(true);
            try {
                // Load all feedback (limit 50)
                await dispatch(loadMoreFeedback(0, 50));
                dispatch(feedbackActions.setShowAll(true));
                setDisplayedFeedbackCount(50);
            } catch (error) {
                console.error("Error loading all feedback:", error);
            } finally {
                setIsLoadingMore(false);
            }
        } else {
            // Reset v·ªÅ 3 feedback
            dispatch(feedbackActions.setShowAll(false));
            setDisplayedFeedbackCount(3);
        }
    };

    // Get displayed feedback
    const getDisplayedFeedback = () => {
        if (!recentFeedback || recentFeedback.length === 0) {
            return [];
        }
        return showAllFeedback ? recentFeedback : recentFeedback.slice(0, displayedFeedbackCount);
    };

    return (
        <div className="home-container">
            <Helmet>
                <title>Trang ch·ªß | X√¢m nh·∫≠p m·∫∑n Tp. H·ªì Ch√≠ Minh</title>
            </Helmet>
            <Header />
            <section id="about-section" className="about-section">
                <Banner
                    backgroundImage={bannerAbout}
                    title="WEBGIS GI√ÅM S√ÅT V√Ä C·∫¢NH B√ÅO X√ÇM NH·∫¨P M·∫∂N TR√äN H·ªÜ TH·ªêNG S√îNG, K√äNH, R·∫†CH T·∫†I TH√ÄNH PH·ªê H·ªí CH√ç MINH"
                    description="Kh√≥a lu·∫≠n t·ªët nghi·ªáp ƒë∆∞·ª£c th·ª±c hi·ªán b·ªüi Nguy·ªÖn V√µ Y·∫øn Linh d∆∞·ªõi s·ª± h∆∞·ªõng d·∫´n c·ªßa ThS. Nguy·ªÖn Duy Li√™m."
                />

                {/* Introduction Section */}
                <div className="container mt-5">
                    <div className="introduction-section">
                        <div className="section-header-home">
                            <h2>T·ªïng quan nghi√™n c·ª©u</h2>
                        </div>
                        <div className="section-content">
                            <div className="content-wrapper mt-5">
                                <div className="text-content ">
                                    <p className="highlight-text">
                                        X√¢m nh·∫≠p m·∫∑n l√† m·ªôt trong nh·ªØng th√°ch th·ª©c nghi√™m tr·ªçng ƒë·ªëi v·ªõi h·ªá
                                        th·ªëng s√¥ng, k√™nh, r·∫°ch t·∫°i Th√†nh ph·ªë H·ªì Ch√≠ Minh, ·∫£nh h∆∞·ªüng ƒë·∫øn ngu·ªìn
                                        n∆∞·ªõc ng·ªçt v√† ƒë·ªùi s·ªëng ng∆∞·ªùi d√¢n.
                                    </p>
                                    <p>
                                        Tr∆∞·ªõc th·ª±c tr·∫°ng n√†y, kh√≥a lu·∫≠n{" "}
                                        <strong>
                                            "Ph√°t tri·ªÉn WebGIS gi√°m s√°t v√† c·∫£nh b√°o x√¢m nh·∫≠p m·∫∑n tr√™n h·ªá th·ªëng
                                            s√¥ng, k√™nh, r·∫°ch t·∫°i Th√†nh ph·ªë H·ªì Ch√≠ Minh"
                                        </strong>{" "}
                                        ƒë∆∞·ª£c th·ª±c hi·ªán nh·∫±m x√¢y d·ª±ng m·ªôt h·ªá th·ªëng gi√°m s√°t th√¥ng minh, h·ªó tr·ª£
                                        qu·∫£n l√Ω t√†i nguy√™n n∆∞·ªõc v√† ƒë∆∞a ra c·∫£nh b√°o k·ªãp th·ªùi.
                                    </p>
                                </div>
                                <div className="stats-grid">
                                    <div className="stat-card">
                                        <span className="stat-icon">üìç</span>
                                        <h3>Ph·∫°m vi</h3>
                                        <p>TP. H·ªì Ch√≠ Minh</p>
                                    </div>
                                    <div className="stat-card">
                                        <span className="stat-icon">üìÖ</span>
                                        <h3>Th·ªùi gian</h3>
                                        <p>2007 - 2024</p>
                                    </div>
                                    <div className="stat-card">
                                        <span className="stat-icon">üéØ</span>
                                        <h3>ƒê·ªëi t∆∞·ª£ng</h3>
                                        <p>X√¢m nh·∫≠p m·∫∑n</p>
                                    </div>
                                    <div className="stat-card">
                                        <span className="stat-icon">üí°</span>
                                        <h3>Gi·∫£i ph√°p</h3>
                                        <p>WebGIS</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            {/* System Overview */}
            <section className="system-overview-section">
                <div className="container">
                    <div className="section-header-home">
                        <h2>T·ªïng quan h·ªá th·ªëng</h2>
                    </div>

                    <div className="overview-grid">
                        {/* 1. B·∫£n ƒë·ªì t∆∞∆°ng t√°c WebGIS */}
                        <div className="overview-card">
                            <div className="card-image">
                                <i
                                    className="fa-solid fa-map"
                                    style={{ color: "blue", fontSize: "1.5rem" }}
                                ></i>
                            </div>
                            <div className="card-content">
                                <h3>B·∫£n ƒë·ªì t∆∞∆°ng t√°c WebGIS</h3>
                                <p>
                                    H·ªá th·ªëng b·∫£n ƒë·ªì tr·ª±c quan v·ªõi kh·∫£ nƒÉng zoom, pan v√† t∆∞∆°ng t√°c th·ªùi gian
                                    th·ª±c, h·ªó tr·ª£ gi√°m s√°t hi·ªáu qu·∫£.
                                </p>
                            </div>
                        </div>

                        {/* 2. Gi√°m s√°t kh√≠ t∆∞·ª£ng th·ªßy vƒÉn */}
                        <div className="overview-card">
                            <div className="card-image">
                                <i
                                    className="fa-solid fa-tower-observation"
                                    style={{ color: "red", fontSize: "1.5rem" }}
                                ></i>
                            </div>
                            <div className="card-content">
                                <h3>Gi√°m s√°t kh√≠ t∆∞·ª£ng th·ªßy vƒÉn</h3>
                                <p>
                                    Theo d√µi d·ªØ li·ªáu t·ª´ c√°c tr·∫°m ƒëo kh√≠ t∆∞·ª£ng tr√™n ƒë·ªãa b√†n TP.HCM, ph·ª•c v·ª•
                                    ph√¢n t√≠ch t√¨nh h√¨nh th·ªùi ti·∫øt v√† th·ªßy vƒÉn.
                                </p>
                            </div>
                        </div>

                        {/* 3. Tr·∫°m x√¢m nh·∫≠p m·∫∑n */}
                        <div className="overview-card">
                            <div className="card-image">
                                <i
                                    className="fa-solid fa-droplet"
                                    style={{ color: "#003366", fontSize: "1.5rem" }}
                                ></i>
                            </div>
                            <div className="card-content">
                                <h3>Tr·∫°m x√¢m nh·∫≠p m·∫∑n</h3>
                                <p>
                                    Gi√°m s√°t ƒë·ªô m·∫∑n t·∫°i c√°c ƒëi·ªÉm quan tr·∫Øc tr·ªçng y·∫øu, ph√°t hi·ªán v√† c·∫£nh b√°o
                                    s·ªõm t√¨nh tr·∫°ng x√¢m nh·∫≠p m·∫∑n.
                                </p>
                            </div>
                        </div>

                        {/* 4. Ph√¢n t√≠ch d·ªØ li·ªáu chuy√™n s√¢u */}
                        <div className="overview-card">
                            <div className="card-image">
                                <i
                                    className="fa-solid fa-chart-column"
                                    style={{ color: "purple", fontSize: "1.5rem" }}
                                ></i>
                            </div>
                            <div className="card-content">
                                <h3>Ph√¢n t√≠ch d·ªØ li·ªáu chuy√™n s√¢u</h3>
                                <p>
                                    Cung c·∫•p c√¥ng c·ª• l·ªçc d·ªØ li·ªáu, xu·∫•t bi·ªÉu ƒë·ªì, th·ªëng k√™ v√† b√°o c√°o h·ªó tr·ª£ ra
                                    quy·∫øt ƒë·ªãnh ch√≠nh x√°c.
                                </p>
                            </div>
                        </div>

                        {/* 5. T√¨m ki·∫øm th√¥ng minh */}
                        <div className="overview-card">
                            <div className="card-image">
                                <i
                                    className="fa-solid fa-magnifying-glass-location"
                                    style={{ color: "orange", fontSize: "1.5rem" }}
                                ></i>
                            </div>
                            <div className="card-content">
                                <h3>T√¨m ki·∫øm th√¥ng minh</h3>
                                <p>
                                    T√¨m ki·∫øm tr·∫°m quan tr·∫Øc theo t√™n, v·ªã tr√≠ ho·∫∑c ƒë·ªãa gi·ªõi h√†nh ch√≠nh k√®m t√≠nh
                                    nƒÉng t·ª± ƒë·ªông zoom t·ªõi v·ªã tr√≠.
                                </p>
                            </div>
                        </div>

                        {/* 6. Th√¥ng tin n·ªÅn */}
                        <div className="overview-card">
                            <div className="card-image">
                                <i
                                    className="fa-solid fa-layer-group"
                                    style={{ color: "blue", fontSize: "1.5rem" }}
                                ></i>
                            </div>
                            <div className="card-content">
                                <h3>Th√¥ng tin n·ªÅn</h3>
                                <p>
                                    Bao g·ªìm ranh gi·ªõi h√†nh ch√≠nh, s√¥ng ng√≤i, h·ªá th·ªëng giao th√¥ng v√† quy ho·∫°ch
                                    s·ª≠ d·ª•ng ƒë·∫•t h·ªó tr·ª£ ph√¢n t√≠ch kh√¥ng gian.
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            {/* User Roles Section */}
            <section className="user-roles-section">
                <div className="container">
                    <div className="section-header-home">
                        <h2>T√≠nh nƒÉng theo ph√¢n quy·ªÅn</h2>
                    </div>

                    <div className="roles-grid">
                        {userRoles.map((role, index) => (
                            <div key={index} className={`role-card ${role.color}`}>
                                <div className="role-header">
                                    <span className="role-icon">{role.icon}</span>
                                    <h3>{role.title}</h3>
                                </div>
                                <ul className="role-features">
                                    {role.features.map((feature, featureIndex) => (
                                        <li key={featureIndex}>
                                            <span className="feature-check">‚úì</span>
                                            {feature}
                                        </li>
                                    ))}
                                </ul>
                                {index === 1 && (
                                    <div className="role-cta">
                                        <Link to="/dang-nhap" className="role-button">
                                            ƒêƒÉng nh·∫≠p ƒë·ªÉ tr·∫£i nghi·ªám
                                        </Link>
                                    </div>
                                )}
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Feedback Section - Simplified and Clean */}
            <section className="feedback-section">
                <div className="container">
                    <div className="section-header">
                        <h2>ƒê√°nh gi√° h·ªá th·ªëng</h2>
                    </div>

                    {feedbackLoading ? (
                        <div className="loading-state">
                            <div className="spinner"></div>
                            <p>ƒêang t·∫£i d·ªØ li·ªáu...</p>
                        </div>
                    ) : feedbackError ? (
                        <div className="error-state">
                            <i className="fa-solid fa-exclamation-triangle"></i>
                            <p>Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu ƒë√°nh gi√°</p>
                        </div>
                    ) : (
                        <div className="home-feedback-content">
                            {/* Quick Stats */}
                            <div className="quick-stats">
                                <div className="stat-item">
                                    <i className="fa-solid fa-comments"></i>
                                    <div className="stat-info">
                                        <span className="stat-number">{overview?.total || 0}</span>
                                        <span className="stat-label">Ph·∫£n h·ªìi</span>
                                    </div>
                                </div>
                                <div className="stat-item">
                                    <i className="fa-solid fa-star"></i>
                                    <div className="stat-info">
                                        <span className="stat-number">
                                            {overview?.averageRating?.toFixed(1) || "0.0"}
                                        </span>
                                        <span className="stat-label">ƒêi·ªÉm TB</span>
                                    </div>
                                </div>
                                <div className="stat-item">
                                    <i className="fa-solid fa-thumbs-up"></i>
                                    <div className="stat-info">
                                        <span className="stat-number">
                                            {overview?.satisfactionRate || 0}%
                                        </span>
                                        <span className="stat-label">H√†i l√≤ng</span>
                                    </div>
                                </div>
                            </div>

                            {/* Recent Feedback - Simple Cards */}
                            <div className="recent-feedback-home">
                                <h3>Ph·∫£n h·ªìi g·∫ßn ƒë√¢y</h3>
                                <div className="feedback-grid">
                                    {getDisplayedFeedback() && getDisplayedFeedback().length > 0 ? (
                                        getDisplayedFeedback().map((feedback, index) => (
                                            <div key={index} className="feedback-card">
                                                <div className="feedback-header">
                                                    <div className="user-info">
                                                        <div className="user-avatar">
                                                            <i className="fa-solid fa-user"></i>
                                                        </div>
                                                        <div className="user-details">
                                                            <span className="user-name">
                                                                {feedback.user?.name || "Ng∆∞·ªùi d√πng"}
                                                            </span>
                                                            <div className="rating">
                                                                {Array.from({ length: 5 }, (_, i) => (
                                                                    <i
                                                                        key={i}
                                                                        className={`fa-${i < feedback.rating ? "solid" : "regular"} fa-star`}
                                                                    ></i>
                                                                ))}
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <span className="feedback-date">
                                                        {new Date(feedback.createdAt).toLocaleDateString(
                                                            "vi-VN",
                                                        )}
                                                    </span>
                                                </div>
                                                <div className="feedback-content">
                                                    <p>
                                                        "{feedback.comment || "ƒê√°nh gi√° t√≠ch c·ª±c v·ªÅ h·ªá th·ªëng"}
                                                        "
                                                    </p>
                                                </div>
                                            </div>
                                        ))
                                    ) : (
                                        <div className="no-feedback">
                                            <i className="fa-regular fa-comment"></i>
                                            <p>Ch∆∞a c√≥ ph·∫£n h·ªìi n√†o</p>
                                        </div>
                                    )}
                                </div>

                                {/* Load More / Show All Button */}
                                {recentFeedback && recentFeedback.length > 3 && (
                                    <div className="load-more-section">
                                        <button
                                            onClick={handleShowAll}
                                            className="load-more-btn"
                                            disabled={isLoadingMore}
                                        >
                                            {isLoadingMore ? (
                                                <>
                                                    <i className="fa-solid fa-spinner fa-spin"></i>
                                                    ƒêang t·∫£i...
                                                </>
                                            ) : showAllFeedback ? (
                                                <>
                                                    <i className="fa-solid fa-chevron-up"></i>
                                                    Thu g·ªçn
                                                </>
                                            ) : (
                                                <>
                                                    <i className="fa-solid fa-chevron-down"></i>
                                                    Xem t·∫•t c·∫£ ({recentFeedback.length} ph·∫£n h·ªìi)
                                                </>
                                            )}
                                        </button>
                                    </div>
                                )}
                            </div>
                        </div>
                    )}
                </div>
            </section>

            <Footer />
        </div>
    );
};

export default Home;
